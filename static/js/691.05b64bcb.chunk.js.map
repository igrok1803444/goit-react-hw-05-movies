{"version":3,"file":"static/js/691.05b64bcb.chunk.js","mappings":"6QAEaA,EAAOC,EAAAA,GAAAA,GAASC,IAAAA,GAAAC,EAAAA,EAAAA,GAAA,mZAkBhBC,EAAiBH,EAAAA,GAAAA,IAAUI,IAAAA,GAAAF,EAAAA,EAAAA,GAAA,4BAG3BG,EAAQL,EAAAA,GAAAA,GAASM,IAAAA,GAAAJ,EAAAA,EAAAA,GAAA,kDAIjBK,EAAgBP,EAAAA,GAAAA,EAAQQ,IAAAA,GAAAN,EAAAA,EAAAA,GAAA,iD,+FCxBxBO,EAAY,SAAHC,GAAmB,IAAbC,EAAKD,EAALC,MACpBC,GAAWC,EAAAA,EAAAA,MACjB,OACEC,EAAAA,EAAAA,KAACf,EAAAA,GAAI,CAAAgB,UACHC,EAAAA,EAAAA,MAACC,EAAAA,GAAO,CAACC,GAAE,WAAAC,OAAaR,EAAMS,IAAMC,MAAO,CAAEC,KAAMV,GAAWG,SAAA,EAC5DD,EAAAA,EAAAA,KAAA,OACES,IAAG,mCAAAJ,OAAqCR,EAAMa,aAC9CC,IAAG,aAAAN,OAAeR,EAAMe,UAE1BV,EAAAA,EAAAA,MAACb,EAAAA,GAAc,CAAAY,SAAA,EACbD,EAAAA,EAAAA,KAACT,EAAAA,GAAK,CAAAU,SAAEJ,EAAMe,SACdV,EAAAA,EAAAA,MAACT,EAAAA,GAAa,CAAAQ,SAAA,CAAC,IAAEJ,EAAMgB,eAAe,cAKhD,E,SCjBaC,E,OAAO5B,GAAAA,GAASC,IAAAA,GAAAC,EAAAA,EAAAA,GAAA,0QCChB2B,EAAY,SAAHnB,GAAoB,IAAdoB,EAAMpB,EAANoB,OAC1B,OACEhB,EAAAA,EAAAA,KAACc,EAAI,CAAAb,SACFe,EAAOC,KAAI,SAAApB,GACV,OAAOG,EAAAA,EAAAA,KAACL,EAAS,CAAgBE,MAAOA,GAAjBA,EAAMS,GAC/B,KAGN,C,qKCTaY,EAAahC,EAAAA,GAAAA,KAAWC,IAAAA,GAAAC,EAAAA,EAAAA,GAAA,iNAcxB+B,EAAejC,EAAAA,GAAAA,OAAaI,IAAAA,GAAAF,EAAAA,EAAAA,GAAA,ifA6B5BgC,EAAclC,EAAAA,GAAAA,MAAYM,IAAAA,GAAAJ,EAAAA,EAAAA,GAAA,8Y,kBCGvC,EAzCe,WAAO,IAADiC,EACnBC,GAAwCC,EAAAA,EAAAA,IAAgB,CAAC,GAAEC,GAAAC,EAAAA,EAAAA,GAAAH,EAAA,GAApDI,EAAYF,EAAA,GAAEG,EAAeH,EAAA,GACpCI,GAA4BC,EAAAA,EAAAA,UAAS,IAAGC,GAAAL,EAAAA,EAAAA,GAAAG,EAAA,GAAjCZ,EAAMc,EAAA,GAAEC,EAASD,EAAA,GAClBE,EAAiC,QAA5BX,EAAGK,EAAaO,IAAI,gBAAQ,IAAAZ,EAAAA,EAAI,IAC3Ca,EAAAA,EAAAA,YAAU,WAImB,SAAAC,IAG1B,OAH0BA,GAAAC,EAAAA,EAAAA,GAAAC,IAAAA,MAA3B,SAAAC,IAAA,IAAAC,EAAA,OAAAF,IAAAA,MAAA,SAAAG,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAAAF,EAAAE,KAAA,GAC0BC,EAAAA,EAAAA,IAAYX,GAAO,KAAD,EAApCO,EAASC,EAAAI,KACfb,EAAUQ,GAAW,wBAAAC,EAAAK,OAAA,GAAAP,EAAA,MACtBQ,MAAA,KAAAC,UAAA,CANa,KAAVf,GAEH,WAC0BG,EAAAW,MAAC,KAADC,UAAA,CAI3BC,EACF,GAAG,CAAChB,IAaJ,OACE9B,EAAAA,EAAAA,MAAA,QAAAD,SAAA,EACEC,EAAAA,EAAAA,MAACgB,EAAU,CAAC+B,SAbI,SAAAC,GAClBA,EAAMC,iBACN,IAAMC,EAAYF,EAAMG,OAAOrB,MAAMsB,MAAMC,cAAcC,OACvC,KAAdJ,IAIJzB,EAAgB,CAAEK,MAAOoB,IACzBF,EAAMG,OAAOI,QACf,EAIsCxD,SAAA,EAChCD,EAAAA,EAAAA,KAACoB,EAAW,CAACsC,KAAK,OAAOC,KAAK,QAAQC,UAAQ,KAC9C5D,EAAAA,EAAAA,KAACmB,EAAY,CAACuC,KAAK,SAAQzD,UACzBD,EAAAA,EAAAA,KAAA,QAAAC,SAAM,iBAGVC,EAAAA,EAAAA,MAAA,OAAAD,SAAA,CACGe,EAAO6C,OAAS,IAAK7D,EAAAA,EAAAA,KAACe,EAAAA,EAAS,CAACC,OAAQA,IACxCA,EAAO6C,QAAU,GAAe,KAAV7B,IAAgBhC,EAAAA,EAAAA,KAAC8D,EAAAA,EAAM,SAItD,C","sources":["components/MovieItem/MovieItem.styled.jsx","components/MovieItem/MovieItem.jsx","components/MovieList/MovieList.styled.jsx","components/MovieList/MovieList.jsx","pages/Movies/Movies.styled.jsx","pages/Movies/Movies.jsx"],"sourcesContent":["import styled from 'styled-components';\n\nexport const Item = styled.li`\n  overflow: hidden;\n\n  border-radius: 4px;\n  box-shadow: 0px 1px 3px 0px rgba(0, 0, 0, 0.2),\n    0px 1px 1px 0px rgba(0, 0, 0, 0.14), 0px 2px 1px -1px rgba(0, 0, 0, 0.12);\n\n  & img {\n    width: 100%;\n    height: 260px;\n    object-fit: cover;\n    transition: transform 250ms cubic-bezier(0.4, 0, 0.2, 1);\n  }\n  & img:hover {\n    transform: scale(1.03);\n    cursor: zoom-in;\n  }\n`;\nexport const TitleContainer = styled.div`\n  padding: 12px;\n`;\nexport const Title = styled.h2`\n  text-align: center;\n  color: black;\n`;\nexport const OriginalTitle = styled.p`\n  text-align: center;\n  color: black;\n`;\n","import { NavLink, useLocation } from 'react-router-dom';\nimport { Item, OriginalTitle, Title, TitleContainer } from './MovieItem.styled';\n\nexport const MovieItem = ({ movie }) => {\n  const location = useLocation();\n  return (\n    <Item>\n      <NavLink to={`/movies/${movie.id}`} state={{ from: location }}>\n        <img\n          src={`https://image.tmdb.org/t/p/w500/${movie.poster_path}`}\n          alt={`Poster of ${movie.title}`}\n        />\n        <TitleContainer>\n          <Title>{movie.title}</Title>\n          <OriginalTitle>({movie.original_title})</OriginalTitle>\n        </TitleContainer>\n      </NavLink>\n    </Item>\n  );\n};\n","import styled from 'styled-components';\n\nexport const List = styled.ul`\n  display: grid;\n  max-width: calc(100vw - 48px);\n  grid-template-columns: repeat(auto-fill, minmax(320px, 1fr));\n  grid-gap: 16px;\n  margin-top: 0;\n  margin-bottom: 0;\n  padding: 0;\n  list-style: none;\n  margin-left: auto;\n  margin-right: auto;\n`;\n","import { MovieItem } from 'components/MovieItem/MovieItem';\nimport { List } from './MovieList.styled';\n\nexport const MovieList = ({ movies }) => {\n  return (\n    <List>\n      {movies.map(movie => {\n        return <MovieItem key={movie.id} movie={movie} />;\n      })}\n    </List>\n  );\n};\n","import styled from 'styled-components';\n\nexport const SearchForm = styled.form`\n  display: flex;\n  gap: 16px;\n  align-items: center;\n  justify-content: center;\n  width: 100%;\n\n  margin-bottom: 16px;\n\n  background-color: #fff;\n  border-radius: 3px;\n  overflow: hidden;\n`;\n\nexport const SearchButton = styled.button`\n  display: inline-block;\n\n  padding: 12px 8px;\n\n  height: 48px;\n\n  padding: 12px 8px;\n  border: 1px solid #00a2ff;\n\n  background-color: white;\n\n  border-radius: 16px;\n\n  font-size: 16px;\n  color: black;\n\n  transition-property: background-color, color;\n  transition-duration: 250ms;\n  transition-timing-function: cubic-bezier(0.4, 0, 0.2, 1);\n  cursor: pointer;\n  outline: none;\n\n  &:hover {\n    opacity: 1;\n    color: white;\n    background-color: #00a2ff;\n  }\n`;\nexport const SearchInput = styled.input`\n  display: inline-block;\n  width: 100%;\n  max-width: 300px;\n  padding: 12px 8px;\n  border: 1px solid #00a2ff;\n\n  background-color: white;\n\n  border-radius: 16px;\n\n  font-size: 16px;\n  color: black;\n  font: inherit;\n  font-size: 20px;\n\n  outline: none;\n  &:focus {\n    outline: 2px solid #00a2ff;\n  }\n\n  &::placeholder {\n    font: inherit;\n    font-size: 18px;\n  }\n`;\n","import { MovieList } from 'components/MovieList/MovieList';\nimport { useEffect, useState } from 'react';\nimport { useSearchParams } from 'react-router-dom';\nimport { fetchMovies } from 'scripts/Api';\nimport { SearchButton, SearchForm, SearchInput } from './Movies.styled';\nimport { NoData } from 'components/NoData/NoData';\n\nconst Movies = () => {\n  const [searchParams, setSearchParams] = useSearchParams({});\n  const [movies, setMovies] = useState([]);\n  const query = searchParams.get('query') ?? '';\n  useEffect(() => {\n    if (query === '') {\n      return;\n    }\n    async function fetchRequest() {\n      const movieData = await fetchMovies(query);\n      setMovies(movieData);\n    }\n    fetchRequest();\n  }, [query]);\n\n  const formHandler = event => {\n    event.preventDefault();\n    const formQuery = event.target.query.value.toLowerCase().trim();\n    if (formQuery === '') {\n      return;\n    }\n\n    setSearchParams({ query: formQuery });\n    event.target.reset();\n  };\n\n  return (\n    <main>\n      <SearchForm onSubmit={formHandler}>\n        <SearchInput type=\"text\" name=\"query\" required />\n        <SearchButton type=\"submit\">\n          <span>Search</span>\n        </SearchButton>\n      </SearchForm>\n      <div>\n        {movies.length > 0 && <MovieList movies={movies} />}\n        {movies.length <= 0 && query !== '' && <NoData />}\n      </div>\n    </main>\n  );\n};\nexport default Movies;\n"],"names":["Item","styled","_templateObject","_taggedTemplateLiteral","TitleContainer","_templateObject2","Title","_templateObject3","OriginalTitle","_templateObject4","MovieItem","_ref","movie","location","useLocation","_jsx","children","_jsxs","NavLink","to","concat","id","state","from","src","poster_path","alt","title","original_title","List","MovieList","movies","map","SearchForm","SearchButton","SearchInput","_searchParams$get","_useSearchParams","useSearchParams","_useSearchParams2","_slicedToArray","searchParams","setSearchParams","_useState","useState","_useState2","setMovies","query","get","useEffect","_fetchRequest","_asyncToGenerator","_regeneratorRuntime","_callee","movieData","_context","prev","next","fetchMovies","sent","stop","apply","arguments","fetchRequest","onSubmit","event","preventDefault","formQuery","target","value","toLowerCase","trim","reset","type","name","required","length","NoData"],"sourceRoot":""}