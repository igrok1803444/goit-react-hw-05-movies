{"version":3,"file":"static/js/257.df0ff903.chunk.js","mappings":"6QAEaA,EAAOC,EAAAA,GAAAA,GAASC,IAAAA,GAAAC,EAAAA,EAAAA,GAAA,mZAkBhBC,EAAiBH,EAAAA,GAAAA,IAAUI,IAAAA,GAAAF,EAAAA,EAAAA,GAAA,4BAG3BG,EAAQL,EAAAA,GAAAA,GAASM,IAAAA,GAAAJ,EAAAA,EAAAA,GAAA,kDAIjBK,EAAgBP,EAAAA,GAAAA,EAAQQ,IAAAA,GAAAN,EAAAA,EAAAA,GAAA,iD,+KCxBxBO,EAAYT,EAAAA,GAAAA,IAAUC,IAAAA,GAAAC,EAAAA,EAAAA,GAAA,kDAMtBQ,GAAWV,EAAAA,EAAAA,IAAOW,EAAAA,GAAPX,CAAYI,IAAAA,GAAAF,EAAAA,EAAAA,GAAA,mbA0BvBU,EAAeZ,EAAAA,GAAAA,IAAUM,IAAAA,GAAAJ,EAAAA,EAAAA,GAAA,4BAGzBW,EAAcb,EAAAA,GAAAA,IAAUQ,IAAAA,GAAAN,EAAAA,EAAAA,GAAA,8BAGxBY,EAAcd,EAAAA,GAAAA,IAAUe,IAAAA,GAAAb,EAAAA,EAAAA,GAAA,yDAIxBc,EAAgBhB,EAAAA,GAAAA,GAASiB,IAAAA,GAAAf,EAAAA,EAAAA,GAAA,iCAGzBgB,EAAelB,EAAAA,GAAAA,EAAQmB,IAAAA,GAAAjB,EAAAA,EAAAA,GAAA,kCAGvBkB,EAAWpB,EAAAA,GAAAA,GAASqB,IAAAA,GAAAnB,EAAAA,EAAAA,GAAA,sG,6CC2BjC,EA3DqB,WAAO,IAADoB,EAAAC,EACzBC,GAA0BC,EAAAA,EAAAA,UAAS,MAAKC,GAAAC,EAAAA,EAAAA,GAAAH,EAAA,GAAjCI,EAAKF,EAAA,GAAEG,EAAQH,EAAA,GAEdI,GAAYC,EAAAA,EAAAA,MAAZD,QACFE,GAAWC,EAAAA,EAAAA,MACXC,GAAcC,EAAAA,EAAAA,QAA2B,QAArBb,EAAe,QAAfC,EAACS,EAASI,aAAK,IAAAb,OAAA,EAAdA,EAAgBc,YAAI,IAAAf,EAAAA,EAAI,WASnD,OAPAgB,EAAAA,EAAAA,YAAU,WACmB,SAAAC,IAG1B,OAH0BA,GAAAC,EAAAA,EAAAA,GAAAC,IAAAA,MAA3B,SAAAC,IAAA,IAAAC,EAAA,OAAAF,IAAAA,MAAA,SAAAG,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAAAF,EAAAE,KAAA,GAC0BC,EAAAA,EAAAA,IAAkBjB,GAAS,KAAD,EAA5Ca,EAASC,EAAAI,KACfnB,EAASc,GAAW,wBAAAC,EAAAK,OAAA,GAAAP,EAAA,MACrBQ,MAAA,KAAAC,UAAA,EAJc,WACYZ,EAAAW,MAAC,KAADC,UAAA,CAI3BC,EACF,GAAG,CAACtB,KAEFuB,EAAAA,EAAAA,MAAAC,EAAAA,SAAA,CAAAC,SAAA,EACEF,EAAAA,EAAAA,MAAC5C,EAAS,CAAC+C,UAAU,YAAWD,SAAA,EAC9BE,EAAAA,EAAAA,KAAC/C,EAAQ,CAACgD,GAAIxB,EAAYyB,QAAQJ,SAAC,mCAClC3B,IACCyB,EAAAA,EAAAA,MAACzC,EAAY,CAAA2C,SAAA,EACXE,EAAAA,EAAAA,KAAA,OACEG,IAAG,mCAAAC,OAAqCjC,EAAMkC,aAC9CC,IAAG,GAAAF,OAAKjC,EAAMoC,eAAc,WAC5BC,MAAM,SAERZ,EAAAA,EAAAA,MAACxC,EAAW,CAAA0C,SAAA,EACVF,EAAAA,EAAAA,MAACvC,EAAW,CAAAyC,SAAA,EACVE,EAAAA,EAAAA,KAAA,MAAAF,SAAK3B,EAAMsC,SACXb,EAAAA,EAAAA,MAAC9C,EAAAA,GAAa,CAAAgD,SAAA,CAAC,IAAE3B,EAAMoC,eAAe,WAExCP,EAAAA,EAAAA,KAACzC,EAAa,CAAAuC,SAAC,oCACfE,EAAAA,EAAAA,KAACvC,EAAY,CAAAqC,SAAE3B,EAAMuC,UAAYC,EAAAA,KACjCX,EAAAA,EAAAA,KAAA,MAAAF,SAAI,oCACJE,EAAAA,EAAAA,KAAA,MAAAF,SACGa,EAAAA,GACCxC,EAAMyC,OAAOC,KAAI,SAAAC,GAAK,OACpBd,EAAAA,EAAAA,KAAA,MAAAF,SAAoBgB,EAAMC,MAAjBD,EAAME,GAAqB,OAI1CpB,EAAAA,EAAAA,MAACjC,EAAQ,CAAAmC,SAAA,EACPE,EAAAA,EAAAA,KAAA,MAAAF,UACEE,EAAAA,EAAAA,KAACiB,EAAAA,GAAS,CAAChB,GAAG,OAAMH,SAAC,4CAEvBE,EAAAA,EAAAA,KAAA,MAAAF,UACEE,EAAAA,EAAAA,KAACiB,EAAAA,GAAS,CAAChB,GAAG,UAASH,SAAC,2DAMhC3B,IAAS6B,EAAAA,EAAAA,KAACkB,EAAAA,EAAM,QAEpBlB,EAAAA,EAAAA,KAAA,OAAKD,UAAU,YAAWD,UACxBE,EAAAA,EAAAA,KAACmB,EAAAA,GAAM,QAIf,C","sources":["components/MovieItem/MovieItem.styled.jsx","pages/MovieDetails/MovieDetails.styled.jsx","pages/MovieDetails/MovieDetails.jsx"],"sourcesContent":["import styled from 'styled-components';\n\nexport const Item = styled.li`\n  overflow: hidden;\n\n  border-radius: 4px;\n  box-shadow: 0px 1px 3px 0px rgba(0, 0, 0, 0.2),\n    0px 1px 1px 0px rgba(0, 0, 0, 0.14), 0px 2px 1px -1px rgba(0, 0, 0, 0.12);\n\n  & img {\n    width: 100%;\n    height: 260px;\n    object-fit: cover;\n    transition: transform 250ms cubic-bezier(0.4, 0, 0.2, 1);\n  }\n  & img:hover {\n    transform: scale(1.03);\n    cursor: zoom-in;\n  }\n`;\nexport const TitleContainer = styled.div`\n  padding: 12px;\n`;\nexport const Title = styled.h2`\n  text-align: center;\n  color: black;\n`;\nexport const OriginalTitle = styled.p`\n  text-align: center;\n  color: black;\n`;\n","import { Link } from 'react-router-dom';\nimport styled from 'styled-components';\n\nexport const Container = styled.div`\n  display: flex;\n\n  padding: 24px 0;\n`;\n\nexport const BackLink = styled(Link)`\n  display: block;\n  padding: 12px 8px;\n\n  height: 44px;\n\n  margin-right: 8px;\n\n  border: 1px solid #00a2ff;\n\n  background-color: white;\n\n  border-radius: 16px;\n\n  font-size: 16px;\n  color: black;\n\n  transition-property: background-color, color;\n  transition-duration: 250ms;\n  transition-timing-function: cubic-bezier(0.4, 0, 0.2, 1);\n\n  &:hover {\n    color: white;\n    background-color: #00a2ff;\n  }\n`;\nexport const MovieWrapper = styled.div`\n  display: flex;\n`;\nexport const DataWrapper = styled.div`\n  padding: 0 16px;\n`;\nexport const TextWrapper = styled.div`\n  width: fit-content;\n  margin-bottom: 24px;\n`;\nexport const OverViewTitle = styled.h3`\n  margin-bottom: 8px;\n`;\nexport const OverViewText = styled.p`\n  margin-bottom: 16px;\n`;\nexport const LinkList = styled.ul`\n  display: flex;\n  gap: 16px;\n\n  padding-left: 0;\n\n  & li {\n    margin-left: 0;\n  }\n`;\n","import { useEffect, useRef } from 'react';\nimport { useState } from 'react';\nimport { Outlet, useLocation, useParams } from 'react-router-dom';\nimport { fetchMovieDetails } from 'scripts/Api';\nimport {\n  BackLink,\n  Container,\n  DataWrapper,\n  LinkList,\n  MovieWrapper,\n  OverViewText,\n  OverViewTitle,\n  TextWrapper,\n} from './MovieDetails.styled';\nimport { OriginalTitle } from 'components/MovieItem/MovieItem.styled';\nimport { RouteLink } from 'components/Header/Header.styled';\nimport { NoData } from 'components/NoData/NoData';\nimport { NoDataMessage } from 'index';\n\nconst MovieDetails = () => {\n  const [movie, setMovie] = useState(null);\n\n  const { movieID } = useParams();\n  const location = useLocation();\n  const backLinkUrl = useRef(location.state?.from ?? '/movies');\n\n  useEffect(() => {\n    async function fetchRequest() {\n      const movieData = await fetchMovieDetails(movieID);\n      setMovie(movieData);\n    }\n    fetchRequest();\n  }, [movieID]);\n  return (\n    <>\n      <Container className=\"container\">\n        <BackLink to={backLinkUrl.current}>Назад</BackLink>\n        {movie && (\n          <MovieWrapper>\n            <img\n              src={`https://image.tmdb.org/t/p/w500/${movie.poster_path}`}\n              alt={`${movie.original_title} poster`}\n              width=\"250\"\n            />\n            <DataWrapper>\n              <TextWrapper>\n                <h2>{movie.title}</h2>\n                <OriginalTitle>({movie.original_title})</OriginalTitle>\n              </TextWrapper>\n              <OverViewTitle>Огляд</OverViewTitle>\n              <OverViewText>{movie.overview || NoDataMessage}</OverViewText>\n              <h3>Жанри</h3>\n              <ul>\n                {NoDataMessage ||\n                  movie.genres.map(genre => (\n                    <li key={genre.id}>{genre.name}</li>\n                  ))}\n              </ul>\n\n              <LinkList>\n                <li>\n                  <RouteLink to=\"cast\">Актори</RouteLink>\n                </li>\n                <li>\n                  <RouteLink to=\"reviews\">Відгуки</RouteLink>\n                </li>\n              </LinkList>\n            </DataWrapper>\n          </MovieWrapper>\n        )}\n        {!movie && <NoData />}\n      </Container>\n      <div className=\"container\">\n        <Outlet />\n      </div>\n    </>\n  );\n};\nexport default MovieDetails;\n"],"names":["Item","styled","_templateObject","_taggedTemplateLiteral","TitleContainer","_templateObject2","Title","_templateObject3","OriginalTitle","_templateObject4","Container","BackLink","Link","MovieWrapper","DataWrapper","TextWrapper","_templateObject5","OverViewTitle","_templateObject6","OverViewText","_templateObject7","LinkList","_templateObject8","_location$state$from","_location$state","_useState","useState","_useState2","_slicedToArray","movie","setMovie","movieID","useParams","location","useLocation","backLinkUrl","useRef","state","from","useEffect","_fetchRequest","_asyncToGenerator","_regeneratorRuntime","_callee","movieData","_context","prev","next","fetchMovieDetails","sent","stop","apply","arguments","fetchRequest","_jsxs","_Fragment","children","className","_jsx","to","current","src","concat","poster_path","alt","original_title","width","title","overview","NoDataMessage","genres","map","genre","name","id","RouteLink","NoData","Outlet"],"sourceRoot":""}